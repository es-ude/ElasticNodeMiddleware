load("@AvrToolchain//platforms/cpu_frequency:cpu_frequency.bzl", "cpu_frequency_flag")

### <extern ###
cc_library(
    name = "BitmanipulationLib",
    visibility = ["//visibility:public"],
    deps = [
        "@EmbeddedUtilities//:BitManipulation",
    ],
)
### extern> ###

### <Libraries ###

cc_library(
    name = "ElasticNodeMiddlewareLib",
    srcs = [
        "//src:elasticNodeMiddleware/ElasticNodeMiddleware.c",
    ],
    hdrs = [
        "ElasticNodeMiddleware/ElasticNodeMiddleware.h",
    ],
    copts = cpu_frequency_flag(),
    visibility = ["//visibility:public"],
    deps = [
        "//:BitmanipulationLib",
        "//src:DelayLibHdr",
        "//src:RegisterDefinitionLibHdr",
        "//src:LedLib",
        "//src:XmemLib",
        "//src:Reconfigure_multiboot_avrLib",
        "//src:ElasticNodeMiddlewareInternalLib",
    ],
)

cc_library(
    name = "ElasticNodeMiddlewareDEBUGLib",
    srcs = [
        "//src:elasticNodeMiddleware/ElasticNodeMiddleware.c",
    ],
    hdrs = [
        "ElasticNodeMiddleware/ElasticNodeMiddleware.h",
    ],
    copts = cpu_frequency_flag() + ["-DDEBUG"] + ["-DLUFA"],
    visibility = ["//visibility:public"],
    deps = [
        "//:BitmanipulationLib",
        "//src:RegisterDefinitionLibHdr",
        "//src:LedLib",
        "//src:XmemLib",
        "//src:ControlmanagerLUFALib",
        "//src:Reconfigure_multiboot_avrLib",
        "//src:ElasticNodeMiddlewareInternalLib",
        "//src:DebugLUFALib"
    ],
)

cc_library(
    name = "ElasticNodeMiddlewareDEBUG_UARTLib",
    srcs = [
        "//src:elasticNodeMiddleware/ElasticNodeMiddleware.c",
    ],
    hdrs = [
        "ElasticNodeMiddleware/ElasticNodeMiddleware.h",
    ],
    copts = cpu_frequency_flag() + ["-DDEBUG"] + ["-DUART"],
    visibility = ["//visibility:public"],
    deps = [
        "//:BitmanipulationLib",
        "//src:RegisterDefinitionLibHdr",
        "//src:LedLib",
        "//src:XmemLib",
        "//src:ControlmanagerUARTLib",
        "//src:Reconfigure_multiboot_avrLib",
        "//src:ElasticNodeMiddlewareInternalLib",
        "//src:DebugUARTLib",
        "//src:UartLib",
    ],
)

cc_library(
    name = "ElasticNodeMiddlewareMonitoringLib",
    srcs = [
        "//src:elasticNodeMiddlewareMonitoring/ElasticNodeMiddlewareMonitoring.c",
    ],
    hdrs = [
        "ElasticNodeMiddleware/ElasticNodeMiddlewareMonitoring.h",
    ],
    copts = cpu_frequency_flag(),
    visibility = ["//visibility:public"],
    deps = [
        "//src:InterruptManagerLib",
        "//:BitmanipulationLib",
    ]
)

### Libraries> ###
exports_files(
    srcs = [
        "ElasticNodeMiddleware/ElasticNodeMiddleware.h",
        "ElasticNodeMiddleware/ElasticNodeMiddlewareMonitoring.h",
    ],
    visibility = ["//visibility:public"],
)

### <python ###

py_library(
    name = "flashBitfiles",
    srcs = ["scripts/flashBitfiles.py"],
    visibility = ["//visibility:public"],
    deps = [
        "Configuration",
    ],
)

py_library(
    name = "Configuration",
    srcs = ["scripts/Configuration.py"],
    visibility = ["//visibility:public"],
    deps = [],
)

py_library(
    name = "portConfigs",
    srcs = ["scripts/portConfigs.py"],
    visibility = ["//visibility:public"],
    deps = [
        "Configuration",
    ],
)

py_library(
    name = "bitfileConfigs",
    srcs = ["scripts/bitfileConfigs.py"],
    visibility = ["//visibility:public"],
    deps = [
        "Configuration",
    ],
)

#load("@my_deps//:requirements.bzl", "requirement")

py_binary(
    name = "uploadBitfiles",
    srcs = ["scripts/uploadBitfiles.py"],
    visibility = ["//visibility:public"],
    deps = [
        "bitfileConfigs",
        "portConfigs",
        "flashBitfiles",
#        requirement("serial"),
#        requirement("numpy"),
    ],
)

### python> ###
